// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("backend.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("tb_categoria", (string)null);
                });

            modelBuilder.Entity("backend.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ativa");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("conteudo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.ToTable("tb_post", (string)null);
                });

            modelBuilder.Entity("backend.Models.PostCategoria", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("post_id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categoria_id");

                    b.HasKey("PostId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("tb_post_categoria", (string)null);
                });

            modelBuilder.Entity("backend.Models.PostCategoria", b =>
                {
                    b.HasOne("backend.Models.Categoria", "Categoria")
                        .WithMany("Posts")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Post", "Post")
                        .WithMany("Categorias")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("backend.Models.Categoria", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("backend.Models.Post", b =>
                {
                    b.Navigation("Categorias");
                });
#pragma warning restore 612, 618
        }
    }
}
